{"version":3,"sources":["web3/index.js","dataContext/index.js","web3/chains.js","web3/injected.js","web3/local.js","web3/fallback.js","dataContext/contracts.js","dataContext/totalRewards.js","dataContext/totalStakes.js","dataContext/blocks.js","dataContext/myStakes.js","dataContext/myRewards.js","dataContext/myBalances.js","dataContext/abilities.js","assets/images/logo.png","assets/images/wallet.svg","components/Header.js","assets/images/question.svg","components/shared/Tooltip.js","components/shared/Value.js","components/Blocks.js","assets/images/usdc-small.svg","assets/images/usdt-small.svg","assets/images/dai-small.svg","components/GlobalStats.js","dataContext/transactions.js","components/shared/Button.js","assets/images/usdc.svg","assets/images/usdt.svg","assets/images/dai.svg","assets/images/lock.svg","components/StakeForm.js","components/Claim.js","assets/images/unlock.svg","components/Unlock.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["context","supportedChains","injectedConnector","InjectedConnector","supportedChainIds","useInjectedConnect","injected","useWeb3React","useState","injectedNext","setInjectedNext","active","activate","chainId","setError","useEffect","ethereum","window","on","handleChainChanged","includes","parseInt","isAuthorized","then","catch","console","error","removeListener","useInactiveListener","undefined","UnsupportedChainIdError","toast","info","toastId","Web3Provider","createContext","displayName","Provider","children","next","local","localNext","setLocalNext","useLocalConnect","fallback","provider","setProvider","getDefaultProvider","process","useFallbackConnect","defaultName","name","account","signerOrProvider","web3","setWeb3","library","getSigner","detectNetwork","network","value","createWeb3Root","useWeb3","useContext","useLiquidityMiningContract","addresses","setAddresses","liquidityMining","useAddresses","liquidityMiningContract","setLiquidityMiningContract","Contract","LiquidityMining","abi","useDecimals","contract","decimals","setDecimals","DataProvider","makeDecimals","Array","fill","join","makeNumeral","bigNumber","numeral","utils","formatUnits","moneyString","money","format","counterString","seconds","Number","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","replace","dateString","Date","toLocaleString","getDecimalNumber","StateEnum","Object","freeze","NotScheduled","Scheduled","Ready","Active","Over","usdcContract","setUsdcContract","usdc","ERC20","useUsdcContract","usdtContract","setUsdtContract","usdt","useUsdtContract","daiContract","setDaiContract","dai","useDaiContract","sarcoContract","setSarcoContract","sarco","useSarcoContract","decimalsUsdc","decimalsUsdt","decimalsDai","decimalsSarco","totalRewards","BigNumber","from","totalSarcoRewards","setTotalSarcoRewards","updateTotalRewards","useTotalRewards","totalClaimedRewards","totalClaimedSarcoRewards","setTotalClaimedSarcoRewards","getClaimedRewards","_","_sarco","add","useTotalClaimedRewards","totalStakeUsdc","setTotalStakeUsdc","addUsdc","_usdc","removeUsdc","sub","useTotalStakeUsdc","totalStakeUsdt","setTotalStakeUsdt","addUsdt","__","_usdt","removeUsdt","useTotalStakeUsdt","totalStakeDai","setTotalStakeDai","addDai","___","_dai","removeDai","useTotalStakeDai","currentBlock","setCurrentBlock","getBlockNumber","blockNumber","useCurrentBlock","currentTime","setCurrentTime","getBlock","block","timestamp","timer","setInterval","clearInterval","useCurrentTime","startTime","setStartTime","updateStartTime","useStartTime","firstStakeTime","setFirstStakeTime","updateFirstStake","useFirstStakeTime","endTime","setEndTime","updateEndTime","_endTime","useEndTime","rewardsPerTime","setRewardsPerTime","eq","div","useRewardsPerTime","timeUntilKickoff","setTimeUntilKickoff","gt","useTimeUntilKickoff","elapsedTime","setElapsedTime","lt","useElapsedTime","remainingTime","setRemainingTime","useRemainingTime","totalEmittedRewards","mul","totalUnemittedRewards","totalUnclaimedRewards","myStakeUsdc","setMyStakeUsdc","userStakeUsdc","myStakeFilter","filters","Stake","myWithdrawFilter","Withdraw","useMyStakeUsdc","myStakeUsdt","setMyStakeUsdt","userStakeUsdt","useMyStakeUsdt","myStakeDai","setMyStakeDai","userStakeDai","useMyStakeDai","isActive","myRewardsPerTime","rewardPerTime","rewardIncrement","setRewardIncrement","Promise","all","totalStake","totalUserStake","total","user","useMyRewardsPerTime","myPendingRewards","pendingRewards","setPendingRewards","stake","callStatic","payout","reward","useMyPendingRewards","myClaimedRewards","claimedRewards","setClaimedRewards","userClaimedRewards","addMyClaimedRewards","rewards","myClaimedRewardsFilter","Payout","useMyClaimedRewards","myTotalRewards","myUsdcBalance","balance","setBalance","balanceOf","useMyUsdcBalance","myUsdtBalance","useMyUsdtBalance","myDaiBalance","useMyDaiBalance","myUsdcAllowance","allowance","setAllowance","address","useMyUsdcAllowance","myUsdtAllowance","useMyUsdtAllowance","myDaiAllowance","useMyDaiAllowance","systemState","state","setState","useSystemState","canStake","setCanStake","useCanStake","canPayout","setCanPayout","useCanPayout","canWithdraw","setCanWithdraw","useCanWithdraw","dataContext","totalStakeStablecoins","myStakedStablecoins","createDataRoot","useData","AccountDisplay","fullStr","strLen","separator","length","charsToShow","frontChars","ceil","backChars","substr","truncate","className","onClick","NoEthereumProviderError","UserRejectedRequestError","Top","src","logo","alt","wallet","Title","liquidityMiningState","setLiquidityMiningState","badgeColor","setBadgeColor","Header","Tooltip","content","question","ValueItem","bigValue","bold","icon","tooltipText","Row","Container","Blocks","SectionContainer","topBorder","GlobalStats","useTransaction","pending","setPending","contractCall","useCallback","contractFn","parameters","pendingMessage","failedMessage","successMessage","successCallback","completedCallback","txResponse","autoClose","closeOnClick","draggable","wait","txReceipt","dismiss","status","success","Button","disabled","rest","StakeForm","setUsdc","setUsdt","setDai","usdcBig","setUsdcBig","usdtBig","setUsdtBig","daiBig","setDaiBig","buttonText","setButtonText","callData","setCallData","buttonEnabled","setButtonEnabled","parseUnits","toFixed","approve","pow","gasLimit","Input","currency","setValue","inputDisable","type","step","slice","makeStep","required","id","onChange","e","normalizedValue","inputValue","target","min","calculateValue","max","placeholder","onSubmit","preventDefault","usdcIcon","usdtIcon","daiIcon","href","lock","Claim","payoutEnabled","setPayoutEnabled","Unlock","withdrawEnabled","setWithdrawEnabled","withdraw","unlock","Body","Footer","packageJson","version","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","ethers","providers","closeButton","document","getElementById"],"mappings":"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","file":"static/js/main.f318afee.chunk.js","sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react'\nimport { useFallbackConnect } from './fallback'\nimport { useLocalConnect } from './local'\nimport { useInjectedConnect } from './injected'\nimport { supportedChains } from './chains'\n\nlet context\n\nconst createWeb3Root = () => {\n  context = createContext()\n\n  context.displayName = 'Web3 Provider'\n  const Provider = context.Provider\n\n  return ({ children }) => {\n    const { injected, injectedNext } = useInjectedConnect()\n    const { local, localNext } = useLocalConnect(injectedNext)\n    const fallback = useFallbackConnect(localNext)\n\n    const defaultName = 'Not connected'\n\n    const [web3, setWeb3] = useState({\n      name: defaultName,\n      account: false,\n      chainId: null,\n      provider: null,\n      signerOrProvider: null,\n    })\n\n    useEffect(() => {\n      if (injected.active && injected.account && supportedChains().includes(injected.chainId)) {\n        setWeb3({\n          name: 'Injected provider',\n          account: injected.account,\n          chainId: injected.chainId,\n          provider: injected.library,\n          signerOrProvider: injected.library.getSigner(),\n        })\n      } else if (local) {\n        local.detectNetwork().then(network => {\n          setWeb3({\n            name: 'Local provider',\n            account: false,\n            chainId: network.chainId,\n            provider: local,\n            signerOrProvider: local,\n          })\n        }).catch(console.error)\n      } else if (fallback) {\n        setWeb3({\n          name: 'Fallback provider',\n          account: false,\n          chainId: fallback.network.chainId,\n          provider: fallback,\n          signerOrProvider: fallback,\n        })\n      } else {\n        setWeb3({\n          name: defaultName,\n          account: false,\n          chainId: null,\n          provider: null,\n          signerOrProvider: null\n        })\n      }\n    }, [injected, local, fallback])\n\n    return <Provider value={web3}>{children}</Provider>\n  }\n}\n\nconst Web3Provider = createWeb3Root()\n\nconst useWeb3 = () => {\n  return useContext(context)\n}\n\nexport { Web3Provider, useWeb3 }\n","import { createContext, useContext, useState, useEffect } from 'react'\nimport { utils } from 'ethers'\nimport numeral from 'numeral'\nimport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n} from './contracts'\nimport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n} from './totalStakes'\nimport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n} from './totalRewards'\nimport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n} from './blocks'\nimport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai,\n} from './myStakes'\nimport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n} from './myRewards'\nimport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n} from './myBalances'\nimport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n} from './abilities'\n\nlet context\n\nconst createDataRoot = () => {\n  context = createContext()\n\n  context.displayName = 'Data Provider'\n  const Provider = context.Provider\n\n  const makeDecimals = decimals => {\n    return `0,0.[${Array(decimals).fill(0).join(\"\")}]`\n  }\n\n  const makeNumeral = (bigNumber, decimals) => {\n    return numeral(utils.formatUnits(bigNumber, decimals))\n  }\n\n  const moneyString = (bigNumber, decimals) => {\n    const money = makeNumeral(bigNumber, decimals).format(makeDecimals(decimals))\n    if (money === \"NaN\") return \"0\"\n    return money\n  }\n\n  const counterString = seconds => {\n    seconds = Number(seconds)\n    var d = Math.floor(seconds / (3600 * 24))\n    var h = Math.floor(seconds % (3600 * 24) / 3600)\n    var m = Math.floor(seconds % 3600 / 60)\n    var s = Math.floor(seconds % 60)\n\n    var dDisplay = d > 0 ? d + (d === 1 ? \" day, \" : \" days, \") : \"\"\n    var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\"\n    var mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\"\n    var sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\"\n\n    if (!dDisplay && !hDisplay && !mDisplay && !sDisplay) sDisplay = \"0 seconds\"\n\n    return (dDisplay + hDisplay + mDisplay + sDisplay).replace(/,\\s*$/, \"\")\n  }\n\n  const dateString = seconds => {\n    return new Date(seconds * 1000).toLocaleString()\n  }\n\n  const getDecimalNumber = (bigNumber, decimals) => {\n    return makeNumeral(bigNumber, decimals).value()\n  }\n\n  const StateEnum = Object.freeze({\n    NotScheduled: 1,\n    Scheduled: 2,\n    Ready: 3,\n    Active: 4,\n    Over: 5,\n  })\n\n  const useSystemState = (startTime, timeUntilKickoff, firstStakeTime, remainingTime) => {\n    const [state, setState] = useState(StateEnum.NotScheduled)\n\n    useEffect(() => {\n      if (startTime.eq(0)) {\n        setState(StateEnum.NotScheduled)\n      } else if (timeUntilKickoff.gt(0)) {\n        setState(StateEnum.Scheduled)\n      } else if (firstStakeTime.eq(0)) {\n        setState(StateEnum.Ready)\n      } else if (remainingTime.gt(0)) {\n        setState(StateEnum.Active)\n      } else {\n        setState(StateEnum.Over)\n      }\n    }, [startTime, timeUntilKickoff, firstStakeTime, remainingTime])\n\n    return state\n  }\n\n  return ({ children }) => {\n    const liquidityMining = useLiquidityMiningContract()\n\n    const usdcContract = useUsdcContract(liquidityMining)\n    const usdtContract = useUsdtContract(liquidityMining)\n    const daiContract = useDaiContract(liquidityMining)\n    const sarcoContract = useSarcoContract(liquidityMining)\n\n    const decimalsUsdc = useDecimals(usdcContract)\n    const decimalsUsdt = useDecimals(usdtContract)\n    const decimalsDai = useDecimals(daiContract)\n    const decimalsSarco = useDecimals(sarcoContract)\n\n    const totalRewards = useTotalRewards(liquidityMining)\n    const totalClaimedRewards = useTotalClaimedRewards(liquidityMining)\n\n    const totalStakeUsdc = useTotalStakeUsdc(liquidityMining)\n    const totalStakeUsdt = useTotalStakeUsdt(liquidityMining)\n    const totalStakeDai = useTotalStakeDai(liquidityMining)\n\n    const currentBlock = useCurrentBlock()\n    const currentTime = useCurrentTime(currentBlock)\n    const startTime = useStartTime(liquidityMining)\n    const firstStakeTime = useFirstStakeTime(liquidityMining)\n    const endTime = useEndTime(liquidityMining)\n    const rewardsPerTime = useRewardsPerTime(totalRewards, startTime, firstStakeTime, endTime)\n\n    const timeUntilKickoff = useTimeUntilKickoff(currentTime, startTime)\n\n    const elapsedTime = useElapsedTime(currentTime, firstStakeTime, endTime)\n    const remainingTime = useRemainingTime(firstStakeTime, elapsedTime, endTime)\n    const totalEmittedRewards = elapsedTime.mul(rewardsPerTime)\n    const totalUnemittedRewards = remainingTime.mul(rewardsPerTime)\n    const totalUnclaimedRewards = totalEmittedRewards.sub(totalClaimedRewards)\n\n    const myStakeUsdc = useMyStakeUsdc(liquidityMining)\n    const myStakeUsdt = useMyStakeUsdt(liquidityMining)\n    const myStakeDai = useMyStakeDai(liquidityMining)\n\n    const isActive = startTime.gt(0) && timeUntilKickoff.eq(0) && firstStakeTime.gt(0) && remainingTime.gt(0) && (myStakeUsdc.add(myStakeUsdt).add(myStakeDai).gt(0))\n    const myRewardsPerTime = useMyRewardsPerTime(liquidityMining, currentBlock, rewardsPerTime, isActive)\n    const myPendingRewards = useMyPendingRewards(liquidityMining, currentBlock, currentTime, myRewardsPerTime, isActive)\n    const myClaimedRewards = useMyClaimedRewards(liquidityMining)\n\n    const myTotalRewards = myPendingRewards.add(myClaimedRewards)\n\n    const myUsdcBalance = useMyUsdcBalance(usdcContract, currentBlock)\n    const myUsdtBalance = useMyUsdtBalance(usdtContract, currentBlock)\n    const myDaiBalance = useMyDaiBalance(daiContract, currentBlock)\n\n    const myUsdcAllowance = useMyUsdcAllowance(liquidityMining, usdcContract, currentBlock)\n    const myUsdtAllowance = useMyUsdtAllowance(liquidityMining, usdtContract, currentBlock)\n    const myDaiAllowance = useMyDaiAllowance(liquidityMining, daiContract, currentBlock)\n\n    const systemState = useSystemState(startTime, timeUntilKickoff, firstStakeTime, remainingTime)\n\n    const canStake = useCanStake(systemState, StateEnum)\n    const canPayout = useCanPayout(myPendingRewards)\n    const canWithdraw = useCanWithdraw(myStakeUsdc, myStakeUsdt, myStakeDai)\n\n    const dataContext = {\n      liquidityMining, usdcContract, usdtContract, daiContract,\n      decimalsUsdc, decimalsUsdt, decimalsDai,\n\n      totalRewards: moneyString(totalRewards, decimalsSarco),\n      totalClaimedRewards: moneyString(totalClaimedRewards, decimalsSarco),\n      rewardsPerTime: moneyString(rewardsPerTime, decimalsSarco),\n      totalEmittedRewards: moneyString(totalEmittedRewards, decimalsSarco),\n      totalUnemittedRewards: moneyString(totalUnemittedRewards, decimalsSarco),\n      totalUnclaimedRewards: moneyString(totalUnclaimedRewards, decimalsSarco),\n\n      totalStakeUsdc: moneyString(totalStakeUsdc, decimalsUsdc),\n      totalStakeUsdt: moneyString(totalStakeUsdt, decimalsUsdt),\n      totalStakeDai: moneyString(totalStakeDai, decimalsDai),\n      totalStakeStablecoins: numeral(\n        getDecimalNumber(totalStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(totalStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(totalStakeDai, decimalsDai)\n      ).format(makeDecimals(decimalsDai)),\n\n      currentTime: dateString(currentTime),\n      startTime: dateString(startTime),\n      firstStakeTime: dateString(firstStakeTime),\n      endTime: dateString(endTime),\n      timeUntilKickoff: counterString(timeUntilKickoff),\n      remainingTime: counterString(remainingTime),\n\n      myStakeUsdc: moneyString(myStakeUsdc, decimalsUsdc),\n      myStakeUsdt: moneyString(myStakeUsdt, decimalsUsdt),\n      myStakeDai: moneyString(myStakeDai, decimalsDai),\n      myStakedStablecoins: numeral(\n        getDecimalNumber(myStakeUsdc, decimalsUsdc) +\n        getDecimalNumber(myStakeUsdt, decimalsUsdt) +\n        getDecimalNumber(myStakeDai, decimalsDai)\n      ).format(makeDecimals(decimalsDai)),\n\n      myPendingRewards: moneyString(myPendingRewards, decimalsSarco),\n      myClaimedRewards: moneyString(myClaimedRewards, decimalsSarco),\n      myTotalRewards: moneyString(myTotalRewards, decimalsSarco),\n      myRewardsPerTime: moneyString(myRewardsPerTime, decimalsSarco),\n\n      myUsdcBalance: moneyString(myUsdcBalance, decimalsUsdc),\n      myUsdtBalance: moneyString(myUsdtBalance, decimalsUsdt),\n      myDaiBalance: moneyString(myDaiBalance, decimalsDai),\n\n      myUsdcAllowance,\n      myUsdtAllowance,\n      myDaiAllowance,\n\n      canStake,\n      canPayout,\n      canWithdraw,\n\n      systemState, StateEnum\n    }\n\n    return <Provider value={dataContext}>{children}</Provider>\n  }\n}\n\nconst DataProvider = createDataRoot()\n\nconst useData = () => {\n  return useContext(context)\n}\n\nexport { DataProvider, useData }","import { useState, useEffect } from 'react'\n\nconst supportedChains = () => {\n  const dev = process.env.NODE_ENV !== 'production' ? [parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)] : []\n  return [...dev, 5]\n}\n\nconst useAddresses = chainId => {\n  const [addresses, setAddresses] = useState()\n\n  useEffect(() => {\n    if (chainId === parseInt(process.env.REACT_APP_LOCAL_CHAINID, 10)) {\n      setAddresses({\n        liquidityMining: process.env.REACT_APP_LOCAL_LIQUIDITY_MINING_ADDRESS\n      })\n    } else if (chainId === 5) {\n      setAddresses({\n        liquidityMining: '0x94A4f22e2a5E56AEA1762d3f1c76C82C94e90E1e'\n      })\n    }\n  }, [chainId])\n\n  return addresses\n}\n\nexport {\n  supportedChains,\n  useAddresses\n}","import { useState, useEffect } from 'react'\nimport { toast } from 'react-toastify'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { InjectedConnector, NoEthereumProviderError, UserRejectedRequestError } from '@web3-react/injected-connector'\nimport { supportedChains } from './chains'\n\nconst injectedConnector = new InjectedConnector({ supportedChainIds: supportedChains() })\n\nconst useInactiveListener = () => {\n  const { activate, chainId } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window\n    if (!ethereum || !ethereum.on) return\n\n    const handleChainChanged = (chainId) => {\n      if (!supportedChains().includes(parseInt(chainId))) return\n\n      injectedConnector.isAuthorized().then(isAuthorized => {\n        if (isAuthorized) {\n          activate(injectedConnector)\n        }\n      }).catch(console.error)\n    }\n\n    ethereum.on('chainChanged', handleChainChanged)\n\n    return () => {\n      if (ethereum.removeListener) {\n        ethereum.removeListener('chainChanged', handleChainChanged)\n      }\n    }\n  }, [activate, chainId])\n}\n\nconst useInjectedConnect = () => {\n  const injected = useWeb3React()\n  const [injectedNext, setInjectedNext] = useState(false)\n\n  const { active, activate, chainId, setError } = injected\n\n  useInactiveListener()\n\n  useEffect(() => {\n    if (active) return\n\n    injectedConnector.isAuthorized().then((isAuthorized) => {\n      if (!isAuthorized) {\n        setInjectedNext(true)\n        return\n      }\n\n      activate(injectedConnector, undefined, true)\n        .then(() => {\n          setInjectedNext(true)\n        }).catch(error => {\n          setInjectedNext(true)\n          if (error instanceof UnsupportedChainIdError) {\n            toast.info('Switch MetaMask to a supported network!', {\n              toastId: 'switchToSupported'\n            })\n          }\n        })\n    }).catch(error => {\n      console.error(error)\n      setInjectedNext(true)\n    })\n  }, [active, activate, chainId, setError])\n\n  return { injected, injectedNext }\n}\n\nconst manuallyConnect = (web3) => {\n  web3.activate(injectedConnector, undefined, true).catch(error => {\n    if (error instanceof NoEthereumProviderError) {\n      toast.info('Install MetaMask to interact!', {\n        toastId: 'installMetaMask'\n      })\n    }\n\n    if (error instanceof UserRejectedRequestError) {\n      toast.info('Connect your MetaMask account to interact!', {\n        toastId: 'connectMetaMask'\n      })\n    }\n\n    if (error instanceof UnsupportedChainIdError) {\n      toast.info('Switch MetaMask to a supported network!', {\n        toastId: 'switchToSupported'\n      })\n    }\n  })\n}\n\nexport { useInjectedConnect, manuallyConnect }","import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\n\nconst useLocalConnect = (next) => {\n  const [local, setLocal] = useState(null)\n  const [localNext, setLocalNext] = useState(false)\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      setLocalNext(true)\n      return\n    }\n\n    if (local || !next) return\n\n    const provider = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_LOCAL_PROVIDER_URL)\n    provider.detectNetwork()\n      .then(() => {\n        setLocalNext(true)\n        setLocal(provider)\n      })\n      .catch(() => {\n        setLocalNext(true)\n        setLocal(null)\n      })\n  }, [local, next])\n\n  return { local, localNext }\n}\n\nexport { useLocalConnect }\n","import { useState, useEffect } from 'react'\nimport { getDefaultProvider } from 'ethers'\n\nconst useFallbackConnect = (next) => {\n  const [provider, setProvider] = useState(null)\n\n  useEffect(() => {\n    if (provider || !next) return\n\n    setProvider(getDefaultProvider(parseInt(process.env.REACT_APP_DEFAULT_CHAIN_ID, 10)))\n  }, [provider, next])\n\n  return provider\n}\n\nexport { useFallbackConnect }\n","import { useState, useEffect } from 'react'\nimport { Contract } from 'ethers'\nimport { useWeb3 } from '../web3'\nimport { useAddresses } from '../web3/chains'\nimport LiquidityMining from '../../build-contracts/LiquidityMining.json'\nimport ERC20 from '../../build-contracts/ERC20.json'\n\nconst useLiquidityMiningContract = () => {\n  const { chainId, signerOrProvider } = useWeb3()\n  const addresses = useAddresses(chainId)\n  const [liquidityMiningContract, setLiquidityMiningContract] = useState()\n\n  useEffect(() => {\n    if (!chainId || !addresses || !signerOrProvider) return\n\n    setLiquidityMiningContract(new Contract(addresses.liquidityMining, LiquidityMining.abi, signerOrProvider))\n  }, [chainId, signerOrProvider, addresses])\n\n  return liquidityMiningContract\n}\n\nconst useUsdcContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdcContract, setUsdcContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdc().then(usdc => {\n      setUsdcContract(new Contract(usdc, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdcContract\n}\n\nconst useUsdtContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [usdtContract, setUsdtContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.usdt().then(usdt => {\n      setUsdtContract(new Contract(usdt, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return usdtContract\n}\n\nconst useDaiContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [daiContract, setDaiContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.dai().then(dai => {\n      setDaiContract(new Contract(dai, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return daiContract\n}\n\nconst useSarcoContract = (liquidityMining) => {\n  const { signerOrProvider } = useWeb3()\n  const [sarcoContract, setSarcoContract] = useState()\n\n  useEffect(() => {\n    if (!liquidityMining || !signerOrProvider) return\n\n    liquidityMining.sarco().then(sarco => {\n      setSarcoContract(new Contract(sarco, ERC20.abi, signerOrProvider))\n    }).catch(console.error)\n  }, [liquidityMining, signerOrProvider])\n\n  return sarcoContract\n}\n\nconst useDecimals = (contract) => {\n  const [decimals, setDecimals] = useState(0)\n\n  useEffect(() => {\n    if (!contract) return\n\n    contract.decimals().then(decimals => {\n      setDecimals(decimals)\n    }).catch(console.error)\n  }, [contract])\n\n  return decimals\n}\n\nexport {\n  useLiquidityMiningContract,\n  useUsdcContract,\n  useUsdtContract,\n  useDaiContract,\n  useSarcoContract,\n  useDecimals\n}","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalRewards = (liquidityMining) => {\n  const [totalSarcoRewards, setTotalSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalRewards().then(sarco => {\n      setTotalSarcoRewards(sarco)\n    }).catch(console.error)\n\n    const updateTotalRewards = (totalRewards) => {\n      setTotalSarcoRewards(totalRewards)\n    }\n\n    liquidityMining.on('Deposit', updateTotalRewards)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateTotalRewards)\n    }\n\n  }, [liquidityMining])\n\n  return totalSarcoRewards\n}\n\nconst useTotalClaimedRewards = (liquidityMining) => {\n  const [totalClaimedSarcoRewards, setTotalClaimedSarcoRewards] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalClaimedRewards().then(sarco => {\n        setTotalClaimedSarcoRewards(sarco)\n      }).catch(console.error)\n\n    const getClaimedRewards = (_, _sarco) => {\n      setTotalClaimedSarcoRewards(sarco => sarco.add(_sarco))\n    }\n\n    liquidityMining.on('Payout', getClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener('Payout', getClaimedRewards)\n    }\n  }, [liquidityMining])\n\n  return totalClaimedSarcoRewards\n}\n\nconst useRewardsPerTime = (totalRewards, startTime, firstStakeTime, endTime) => {\n  const [rewardsPerTime, setRewardsPerTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (startTime.eq(0)) {\n      setRewardsPerTime(BigNumber.from(0))\n      return\n    }\n\n    if (firstStakeTime.eq(0)) {\n      setRewardsPerTime(totalRewards.div(endTime.sub(startTime)))\n      return\n    }\n\n    setRewardsPerTime(totalRewards.div(endTime.sub(firstStakeTime)))\n  }, [totalRewards, startTime, firstStakeTime, endTime])\n\n  return rewardsPerTime\n}\n\nexport {\n  useTotalRewards,\n  useTotalClaimedRewards,\n  useRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\n\nconst useTotalStakeUsdc = (liquidityMining) => {\n  const [totalStakeUsdc, setTotalStakeUsdc] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdc().then(usdc => {\n      setTotalStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setTotalStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    liquidityMining.on('Stake', addUsdc)\n    liquidityMining.on('Withdraw', removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdc)\n      liquidityMining.removeListener('Withdraw', removeUsdc)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdc\n}\n\nconst useTotalStakeUsdt = (liquidityMining) => {\n  const [totalStakeUsdt, setTotalStakeUsdt] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeUsdt().then(usdt => {\n      setTotalStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setTotalStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    liquidityMining.on('Stake', addUsdt)\n    liquidityMining.on('Withdraw', removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addUsdt)\n      liquidityMining.removeListener('Withdraw', removeUsdt)\n    }\n  }, [liquidityMining])\n\n  return totalStakeUsdt\n}\n\nconst useTotalStakeDai = (liquidityMining) => {\n  const [totalStakeDai, setTotalStakeDai] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.totalStakeDai().then(dai => {\n      setTotalStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setTotalStakeDai(_dai => _dai.sub(dai))\n    }\n\n    liquidityMining.on('Stake', addDai)\n    liquidityMining.on('Withdraw', removeDai)\n\n    return () => {\n      liquidityMining.removeListener('Stake', addDai)\n      liquidityMining.removeListener('Withdraw', removeDai)\n    }\n  }, [liquidityMining])\n\n  return totalStakeDai\n}\n\nexport {\n  useTotalStakeUsdc,\n  useTotalStakeUsdt,\n  useTotalStakeDai,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useCurrentBlock = () => {\n  const [currentBlock, setCurrentBlock] = useState(0)\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlockNumber().then(blockNumber => {\n      setCurrentBlock(blockNumber)\n    })\n\n    const getBlockNumber = blockNumber => {\n      setCurrentBlock(blockNumber)\n    }\n\n    provider.on('block', getBlockNumber)\n\n    return () => {\n      provider.removeListener('block', getBlockNumber)\n    }\n  }, [provider])\n\n  return currentBlock\n}\n\nconst useCurrentTime = (blockNumber) => {\n  const [currentTime, setCurrentTime] = useState(BigNumber.from(0))\n  const { provider } = useWeb3()\n\n  useEffect(() => {\n    if (!provider) return\n\n    provider.getBlock(blockNumber).then(block => {\n      setCurrentTime(BigNumber.from(block.timestamp))\n    }).catch(console.error)\n\n    const timer = setInterval(() => {\n      setCurrentTime(currentTime => currentTime.add(BigNumber.from(1)))\n    }, 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [provider, blockNumber])\n\n  return currentTime\n}\n\nconst useStartTime = (liquidityMining) => {\n  const [startTime, setStartTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.startTime().then(startTime => {\n      setStartTime(startTime)\n    }).catch(console.error)\n\n    const updateStartTime = (_, startTime) => {\n      setStartTime(startTime)\n    }\n\n    liquidityMining.on('Deposit', updateStartTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateStartTime)\n    }\n\n  }, [liquidityMining])\n\n  return startTime\n}\n\nconst useFirstStakeTime = (liquidityMining) => {\n  const [firstStakeTime, setFirstStakeTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    const updateFirstStake = () => {\n      liquidityMining.firstStakeTime().then(firstStakeTime => {\n        setFirstStakeTime(firstStakeTime)\n      }).catch(console.error)\n    }\n\n    updateFirstStake()\n\n    liquidityMining.on('Stake', updateFirstStake)\n\n    return () => {\n      liquidityMining.removeListener('Stake', updateFirstStake)\n    }\n\n  }, [liquidityMining])\n\n  return firstStakeTime\n}\n\nconst useEndTime = (liquidityMining) => {\n  const [endTime, setEndTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!liquidityMining) return\n\n    liquidityMining.endTime().then(endTime => {\n      setEndTime(endTime)\n    }).catch(console.error)\n\n    const updateEndTime = (_, __, _endTime) => {\n      setEndTime(_endTime)\n    }\n\n    liquidityMining.on('Deposit', updateEndTime)\n\n    return () => {\n      liquidityMining.removeListener('Deposit', updateEndTime)\n    }\n  }, [liquidityMining])\n\n  return endTime\n}\n\nconst useElapsedTime = (currentTime, firstStakeTime, endTime) => {\n  const [elapsedTime, setElapsedTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setElapsedTime(BigNumber.from(0))\n      return\n    }\n\n    if (endTime.lt(currentTime)) {\n      setElapsedTime(endTime.sub(firstStakeTime))\n      return\n    }\n\n    setElapsedTime(currentTime.sub(firstStakeTime))\n  }, [currentTime, firstStakeTime, endTime])\n\n  return elapsedTime\n}\n\nconst useRemainingTime = (firstStakeTime, elapsedTime, endTime) => {\n  const [remainingTime, setRemainingTime] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (firstStakeTime.eq(0)) {\n      setRemainingTime(BigNumber.from(0))\n      return\n    }\n\n    setRemainingTime(endTime.sub(firstStakeTime.add(elapsedTime)))\n  }, [firstStakeTime, elapsedTime, endTime])\n\n  return remainingTime\n}\n\nconst useTimeUntilKickoff = (currentTime, startTime) => {\n  const [timeUntilKickoff, setTimeUntilKickoff] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (currentTime.gt(startTime)) {\n      setTimeUntilKickoff(BigNumber.from(0))\n      return\n    }\n\n    setTimeUntilKickoff(startTime.sub(currentTime))\n  }, [currentTime, startTime])\n\n  return timeUntilKickoff\n}\n\nexport {\n  useCurrentBlock,\n  useCurrentTime,\n  useStartTime,\n  useFirstStakeTime,\n  useEndTime,\n  useElapsedTime,\n  useRemainingTime,\n  useTimeUntilKickoff,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyStakeUsdc = (liquidityMining) => {\n  const [myStakeUsdc, setMyStakeUsdc] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdc(account).then(usdc => {\n      setMyStakeUsdc(usdc)\n    }).catch(console.error)\n\n    const addUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.add(usdc))\n    }\n\n    const removeUsdc = (_, usdc) => {\n      setMyStakeUsdc(_usdc => _usdc.sub(usdc))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdc)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdc)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdc)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdc)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdc\n}\n\nconst useMyStakeUsdt = (liquidityMining) => {\n  const [myStakeUsdt, setMyStakeUsdt] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeUsdt(account).then(usdt => {\n      setMyStakeUsdt(usdt)\n    }).catch(console.error)\n\n    const addUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.add(usdt))\n    }\n\n    const removeUsdt = (_, __, usdt) => {\n      setMyStakeUsdt(_usdt => _usdt.sub(usdt))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addUsdt)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeUsdt)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addUsdt)\n      liquidityMining.removeListener(myWithdrawFilter, removeUsdt)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeUsdt\n}\n\nconst useMyStakeDai = (liquidityMining) => {\n  const [myStakeDai, setMyStakeDai] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userStakeDai(account).then(dai => {\n      setMyStakeDai(dai)\n    }).catch(console.error)\n\n    const addDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.add(dai))\n    }\n\n    const removeDai = (_, __, ___, dai) => {\n      setMyStakeDai(_dai => _dai.sub(dai))\n    }\n\n    const myStakeFilter = liquidityMining.filters.Stake(account, null, null, null)\n    liquidityMining.on(myStakeFilter, addDai)\n\n    const myWithdrawFilter = liquidityMining.filters.Withdraw(account, null, null, null, null)\n    liquidityMining.on(myWithdrawFilter, removeDai)\n\n    return () => {\n      liquidityMining.removeListener(myStakeFilter, addDai)\n      liquidityMining.removeListener(myWithdrawFilter, removeDai)\n    }\n  }, [liquidityMining, account])\n\n  return myStakeDai\n}\n\nexport {\n  useMyStakeUsdc,\n  useMyStakeUsdt,\n  useMyStakeDai\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyPendingRewards = (liquidityMining, currentBlock, currentTime, rewardIncrement, isActive) => {\n  const [pendingRewards, setPendingRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (isActive) {\n      setPendingRewards(pendingRewards => pendingRewards.add(rewardIncrement))\n    }\n  }, [currentTime, rewardIncrement, isActive])\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.totalUserStake(account).then(stake => {\n      if (stake.gt(0)) {\n        liquidityMining.callStatic.payout(account).then(reward => {\n          setPendingRewards(reward)\n        }).catch(console.error)\n      } else {\n        setPendingRewards(BigNumber.from(0))\n      }\n    }).catch(console.error)\n    \n  }, [liquidityMining, currentBlock, account])\n\n  return pendingRewards\n}\n\nconst useMyClaimedRewards = (liquidityMining) => {\n  const [claimedRewards, setClaimedRewards] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    liquidityMining.userClaimedRewards(account).then(reward => {\n      setClaimedRewards(reward)\n    }).catch(console.error)\n\n    const addMyClaimedRewards = (_, reward) => {\n      setClaimedRewards(rewards => rewards.add(reward))\n    }\n\n    const myClaimedRewardsFilter = liquidityMining.filters.Payout(account, null, null)\n    liquidityMining.on(myClaimedRewardsFilter, addMyClaimedRewards)\n\n    return () => {\n      liquidityMining.removeListener(myClaimedRewardsFilter, addMyClaimedRewards)\n    }\n  }, [liquidityMining, account])\n\n  return claimedRewards\n}\n\nconst useMyRewardsPerTime = (liquidityMining, currentBlock, rewardPerTime, isActive) => {\n  const [rewardIncrement, setRewardIncrement] = useState(BigNumber.from(0))\n  const { account } = useWeb3()\n\n  useEffect(() => {\n    if (!liquidityMining || !account) return\n\n    if (!isActive) {\n      setRewardIncrement(BigNumber.from(0))\n      return\n    }\n\n    Promise.all([liquidityMining.totalStake(), liquidityMining.totalUserStake(account)])\n      .then(([total, user]) => {\n        if (total.eq(0)) {\n          setRewardIncrement(BigNumber.from(0))\n        } else {\n          setRewardIncrement(rewardPerTime.mul(user).div(total))\n        }\n      }).catch(console.error)\n  }, [liquidityMining, account, currentBlock, rewardPerTime, isActive])\n\n  return rewardIncrement\n}\n\nexport {\n  useMyPendingRewards,\n  useMyClaimedRewards,\n  useMyRewardsPerTime,\n}\n","import { useState, useEffect } from 'react'\nimport { BigNumber } from 'ethers'\nimport { useWeb3 } from '../web3'\n\nconst useMyUsdcBalance = (usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdcContract) return\n\n    usdcContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdcContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdtBalance = (usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !usdtContract) return\n\n    usdtContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, usdtContract, currentBlock])\n\n  return balance\n}\n\nconst useMyDaiBalance = (daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [balance, setBalance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !daiContract) return\n\n    daiContract.balanceOf(account).then(balance => {\n      setBalance(balance)\n    }).catch(console.error)\n  }, [account, daiContract, currentBlock])\n\n  return balance\n}\n\nconst useMyUsdcAllowance = (liquidityMining, usdcContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdcContract) return\n\n    usdcContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdcContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyUsdtAllowance = (liquidityMining, usdtContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !usdtContract) return\n\n    usdtContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, usdtContract, currentBlock])\n\n  return allowance\n}\n\nconst useMyDaiAllowance = (liquidityMining, daiContract, currentBlock) => {\n  const { account } = useWeb3()\n  const [allowance, setAllowance] = useState(BigNumber.from(0))\n\n  useEffect(() => {\n    if (!account || !liquidityMining || !daiContract) return\n\n    daiContract.allowance(account, liquidityMining.address).then(allowance => {\n      setAllowance(allowance)\n    }).catch(console.error)\n  }, [account, liquidityMining, daiContract, currentBlock])\n\n  return allowance\n}\n\nexport {\n  useMyUsdcBalance,\n  useMyUsdtBalance,\n  useMyDaiBalance,\n  useMyUsdcAllowance,\n  useMyUsdtAllowance,\n  useMyDaiAllowance,\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3 } from '../web3'\n\nconst useCanStake = (systemState, StateEnum) => {\n  const { account } = useWeb3()\n  const [canStake, setCanStake] = useState(false)\n\n  useEffect(() => {\n    setCanStake(account && [StateEnum.Ready, StateEnum.Active].includes(systemState))\n  }, [account, systemState, StateEnum])\n\n  return canStake\n}\n\nconst useCanPayout = (pendingRewards) => {\n  const { account } = useWeb3()\n  const [canPayout, setCanPayout] = useState(false)\n\n  useEffect(() => {\n    setCanPayout(account && pendingRewards.gt(0))\n  }, [account, pendingRewards])\n\n  return canPayout\n}\n\nconst useCanWithdraw = (usdc, usdt, dai) => {\n  const { account } = useWeb3()\n  const [canWithdraw, setCanWithdraw] = useState(false)\n\n  useEffect(() => {\n    setCanWithdraw(account && (usdc.gt(0) || usdt.gt(0) || dai.gt(0)))\n  }, [account, usdc, usdt, dai])\n\n  return canWithdraw\n}\n\nexport {\n  useCanStake,\n  useCanPayout,\n  useCanWithdraw,\n}\n","export default __webpack_public_path__ + \"static/media/logo.46d0239c.png\";","export default __webpack_public_path__ + \"static/media/wallet.7d4fae45.svg\";","import { useState, useEffect } from 'react'\nimport { useInjectedConnect, manuallyConnect } from '../web3/injected'\nimport { useData } from '../dataContext'\nimport logo from '../assets/images/logo.png'\nimport wallet from '../assets/images/wallet.svg'\n\nconst AccountDisplay = ({ account }) => {\n  const { injected } = useInjectedConnect()\n\n  const truncate = (fullStr, strLen, separator) => {\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    const sepLen = separator.length\n    const charsToShow = strLen - sepLen\n    const frontChars = Math.ceil(charsToShow / 2 + 1) // accounts for the \"0x\"\n    const backChars = Math.floor(charsToShow / 2 - 1) // accounts for the \"0x\"\n\n    return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n  }\n\n  if (account) {\n    return (\n      <div>\n        {truncate(account, 25)}\n      </div>\n    )\n  } else {\n    return (\n      <button className=\"underline\" onClick={() => manuallyConnect(injected)}>\n        Connect Web3 Account\n      </button>\n    )\n  }\n}\n\nconst Top = () => {\n  const { injected } = useInjectedConnect()\n\n  return (\n    <div className=\"flex justify-between mb-16\">\n      <div className=\"w-24 p-1\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"flex items-center\">\n        <div>\n          <img src={wallet} alt=\"wallet\" />\n        </div>\n        <div className=\"ml-3 text-gray-400 text-sm\">\n          <AccountDisplay account={injected.account} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Title = () => {\n  const { systemState, StateEnum } = useData()\n\n  const [liquidityMiningState, setLiquidityMiningState] = useState(\"Not Scheduled\")\n  const [badgeColor, setBadgeColor] = useState(\"bg-red\")\n\n  useEffect(() => {\n    if (systemState === StateEnum.NotScheduled) {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    } else if (systemState === StateEnum.Scheduled) {\n      setLiquidityMiningState(\"Scheduled\")\n      setBadgeColor(\"bg-yellow\")\n    } else if (systemState === StateEnum.Ready) {\n      setLiquidityMiningState(\"Ready\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Active) {\n      setLiquidityMiningState(\"Active\")\n      setBadgeColor(\"bg-green\")\n    } else if (systemState === StateEnum.Over) {\n      setLiquidityMiningState(\"Over\")\n      setBadgeColor(\"bg-red\")\n    } else {\n      setLiquidityMiningState(\"Not Scheduled\")\n      setBadgeColor(\"bg-red\")\n    }\n  }, [systemState, StateEnum])\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <h1 className=\"text-xl\">\n        Liquidity Mining\n      </h1>\n      <div className={`ml-3 py-1 px-2 ${badgeColor} text-gray-900 text-xs rounded`}>\n        {liquidityMiningState}\n      </div>\n    </div>\n  )\n}\n\nconst Header = () => {\n  return (\n    <div className=\"pt-2 pb-6\">\n      <Top />\n      <Title />\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/question.6cbe55dd.svg\";","import Tippy from '@tippyjs/react'\nimport question from '../../assets/images/question.svg'\n\nconst Tooltip = ({ children }) => {\n  return (\n  <Tippy content={children} className=\"border-2 border-white rounded text-center text-xs font-normal p-2 bg-gray-900\">\n    <img src={question} alt=\"tooltip\" />\n  </Tippy>\n  )\n}\n\nexport default Tooltip\n","import Tooltip from './Tooltip'\n\nconst ValueItem = ({ children, value, bigValue = false, bold = false, icon, tooltipText }) => {\n  return (\n    <div className=\"mx-4 mb-6 text-sm\">\n      <div className={`${bold ? \"text-white font-bold\" : \"text-gray-400 font-normal\"} mb-2`}>\n        {tooltipText\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">{children}</div>\n              <Tooltip>{tooltipText}</Tooltip>\n            </div>\n          : children}\n      </div>\n      <div className={`${bigValue ? \"text-lg\" : \"text-sm\"} ${bold ? \"font-bold\" : \"font-normal\"}`}>\n        {icon\n          ? <div className=\"flex justify-center items-center\">\n              <div className=\"mr-2\">\n                <img src={icon} alt=\"icon\" />\n              </div>\n              <div>{value}</div>\n            </div>\n          : value\n        }\n      </div>\n    </div>\n  )\n}\n\nconst Row = ({ children, value, total }) => {\n  return (\n    <div className=\"flex mb-1 items-center\">\n      <div className=\"w-1/2 text-right text-gray-400\">\n        {children}\n      </div>\n      <div className={`w-1/2 ml-2 text-right truncate ${total ? \"font-bold\": \"\"}`}>\n        {value}\n      </div>\n    </div>\n  )\n}\n\nexport { ValueItem, Row }\n","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-wrap justify-center text-center border-b border-t pt-6 mb-6 border-gray-500\">\n      {children}\n    </div>\n  )\n}\n\nconst NotScheduled = () => {\n  const { currentTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime}>Current Time</ValueItem>\n    </Container>\n  )\n}\n\nconst Scheduled = () => {\n  const { currentTime, startTime, timeUntilKickoff } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime}>Current Time</ValueItem>\n      <ValueItem value={startTime}>Start Time</ValueItem>\n      <ValueItem value={timeUntilKickoff}>Time Until Kickoff</ValueItem>\n    </Container>\n  )\n}\n\nconst Ready = () => {\n  const { currentTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={currentTime}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Active = () => {\n  const { currentTime, firstStakeTime, endTime, remainingTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={currentTime}>Current Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={remainingTime}>Remaining Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Over = () => {\n  const { currentTime, firstStakeTime, endTime, rewardsPerTime } = useData()\n\n  return (\n    <Container>\n      <ValueItem value={firstStakeTime}>Start Time</ValueItem>\n      <ValueItem value={endTime}>End Time</ValueItem>\n      <ValueItem value={currentTime}>Current Time</ValueItem>\n      <ValueItem value={rewardsPerTime}>SARCO Per Second</ValueItem>\n    </Container>\n  )\n}\n\nconst Blocks = () => {\n  const { systemState, StateEnum } = useData()\n\n  if (systemState === StateEnum.NotScheduled) {\n    return <NotScheduled />\n  } else if (systemState === StateEnum.Scheduled) {\n    return <Scheduled />\n  } else if (systemState === StateEnum.Ready) {\n    return <Ready />\n  } else if (systemState === StateEnum.Active) {\n    return <Active />\n  } else if (systemState === StateEnum.Over) {\n    return <Over />\n  } else {\n    return <></>\n  }\n}\n\nexport default Blocks\n","export default __webpack_public_path__ + \"static/media/usdc-small.7f23db62.svg\";","export default __webpack_public_path__ + \"static/media/usdt-small.230eb725.svg\";","export default __webpack_public_path__ + \"static/media/dai-small.102cb29e.svg\";","import { useData } from '../dataContext'\nimport { ValueItem } from './shared/Value'\nimport usdc from '../assets/images/usdc-small.svg'\nimport usdt from '../assets/images/usdt-small.svg'\nimport dai from '../assets/images/dai-small.svg'\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"flex flex-col text-center\">\n      {children}\n    </div>\n  )\n}\n\nconst SectionContainer = ({ children, topBorder = false }) => {\n  return (\n    <div className={`flex flex-col sm:flex-row flex-wrap justify-center ${topBorder ? \"pt-6 sm:pt-0 border-t border-gray-500 sm:border-none\" : \"border-none\"}`}>\n      {children}\n    </div>\n  )\n}\n\nconst GlobalStats = () => {\n  const {\n    totalEmittedRewards,\n    totalUnemittedRewards,\n    totalClaimedRewards,\n    totalUnclaimedRewards,\n    totalRewards,\n    totalStakeUsdc,\n    totalStakeUsdt,\n    totalStakeDai,\n    totalStakeStablecoins,\n  } = useData()\n\n  return (\n    <Container>\n      <SectionContainer>\n        <ValueItem bigValue value={totalEmittedRewards}>Emitted SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnemittedRewards}>Unemitted SARCO</ValueItem>\n        <ValueItem bigValue bold value={totalRewards}\n          tooltipText=\"&quot;Total SARCO&quot; is the sum of Emitted SARCO and Unemitted SARCO, which shows the total number of SARCO that liquidity mining will produce\"\n        >Total SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue value={totalClaimedRewards}\n          tooltipText=\"&quot;Total Claimed SARCO&quot; is the sum of all SARCO which have been claimed (via transactions to own wallets) from liquidity mining, by all participants\"\n        >Total Claimed SARCO</ValueItem>\n        <ValueItem bigValue value={totalUnclaimedRewards}\n          tooltipText=\"&quot;Total Unclaimed SARCO&quot; is calculated as as &quot;Emitted SARCO&quot; minus &quot;Total Claimed SARCO&quot;\"\n        >Total Unclaimed SARCO</ValueItem>\n      </SectionContainer>\n      <SectionContainer topBorder>\n        <ValueItem bigValue icon={usdc} value={totalStakeUsdc}>Total Locked USDC</ValueItem>\n        <ValueItem bigValue icon={usdt} value={totalStakeUsdt}>Total Locked USDT</ValueItem>\n        <ValueItem bigValue icon={dai} value={totalStakeDai}>Total Locked DAI</ValueItem>\n        <ValueItem bigValue bold value={totalStakeStablecoins}\n          tooltipText=\"&quot;Total Locked Stablecoins&quot; refers to the sum of all stablecoins that have been locked by everyone participating in liquidity mining\"\n        >Total Locked Stablecoins</ValueItem>\n      </SectionContainer>\n    </Container>\n  )\n}\n\nexport default GlobalStats\n","import { useState, useCallback } from 'react'\nimport { toast } from 'react-toastify'\n\nconst useTransaction = () => {\n  const [pending, setPending] = useState(false)\n\n  const contractCall = useCallback(\n    (contractFn, parameters, pendingMessage, failedMessage, successMessage, successCallback, completedCallback) => {\n      setPending(true)\n      let toastId\n      contractFn(...parameters)\n        .then(txResponse => {\n          toastId = toast.info(pendingMessage, {\n            autoClose: false,\n            closeOnClick: false,\n            draggable: false\n          })\n          return Promise.all([txResponse.wait(), toastId])\n        })\n        .then(([txReceipt, toastId]) => {\n          setPending(false)\n          toast.dismiss(toastId)\n          if (txReceipt.status === 0) {\n            toast.error(failedMessage)\n          } else if (txReceipt.status === 1) {\n            toast.success(successMessage)\n            if (successCallback) successCallback()\n          } else {\n            toast.error(\"Not sure what happened with that transaction\")\n          }\n          if (completedCallback) completedCallback()\n        })\n        .catch(error => {\n          console.error(error)\n          setPending(false)\n          toast.dismiss(toastId)\n          toast.error(\"There was an error! Check your browser's console logs for more details.\")\n        })\n    }, [])\n\n  return { contractCall, pending }\n}\n\nexport { useTransaction }","const Button = ({ children, icon, disabled, className = \"\", ...rest }) => {\n  return (\n    <button {...rest} disabled={disabled} className={`border-2 border-white p-2 min-w-full ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"} ${className}`}>\n      <div className=\"flex justify-center text-sm items-center\">\n        <div>\n          {children}\n        </div>\n        {icon && <div className=\"ml-3\">\n          <img src={icon} alt=\"icon\" />\n        </div>}\n      </div>\n    </button>\n  )\n}\n\nexport { Button }\n","export default __webpack_public_path__ + \"static/media/usdc.cad2e94f.svg\";","export default __webpack_public_path__ + \"static/media/usdt.9f777612.svg\";","export default __webpack_public_path__ + \"static/media/dai.a8d8a983.svg\";","export default __webpack_public_path__ + \"static/media/lock.0df973d1.svg\";","import { useState, useEffect, useCallback } from 'react'\nimport { BigNumber, utils } from 'ethers'\nimport numeral from 'numeral'\nimport { useData } from '../dataContext'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\nimport usdcIcon from '../assets/images/usdc.svg'\nimport usdtIcon from '../assets/images/usdt.svg'\nimport daiIcon from '../assets/images/dai.svg'\nimport lock from '../assets/images/lock.svg'\n\nconst StakeForm = () => {\n  const { account } = useWeb3()\n  const {\n    liquidityMining,\n    usdcContract,\n    usdtContract,\n    daiContract,\n    myUsdcBalance,\n    myUsdtBalance,\n    myDaiBalance,\n    myUsdcAllowance,\n    myUsdtAllowance,\n    myDaiAllowance,\n    decimalsUsdc,\n    decimalsUsdt,\n    decimalsDai,\n    canStake,\n  } = useData()\n\n  const [usdc, setUsdc] = useState(0)\n  const [usdt, setUsdt] = useState(0)\n  const [dai, setDai] = useState(0)\n\n  const [usdcBig, setUsdcBig] = useState(BigNumber.from(0))\n  const [usdtBig, setUsdtBig] = useState(BigNumber.from(0))\n  const [daiBig, setDaiBig] = useState(BigNumber.from(0))\n\n  const [buttonText, setButtonText] = useState(\"Stake\")\n  const { contractCall, pending } = useTransaction()\n  const [callData, setCallData] = useState([])\n\n  const [buttonEnabled, setButtonEnabled] = useState(false)\n\n  useEffect(() => {\n    setButtonEnabled(!pending && (usdcBig.gt(0) || usdtBig.gt(0) || daiBig.gt(0)))\n  }, [pending, usdcBig, usdtBig, daiBig])\n\n  useEffect(() => {\n    setUsdc(0)\n    setUsdt(0)\n    setDai(0)\n  }, [account])\n\n  useEffect(() => {\n    setUsdcBig(utils.parseUnits((usdc || 0).toFixed(decimalsUsdc), decimalsUsdc))\n  }, [usdc, decimalsUsdc])\n\n  useEffect(() => {\n    setUsdtBig(utils.parseUnits((usdt || 0).toFixed(decimalsUsdt), decimalsUsdt))\n  }, [usdt, decimalsUsdt])\n\n  useEffect(() => {\n    setDaiBig(utils.parseUnits((dai || 0).toFixed(decimalsDai), decimalsDai))\n  }, [dai, decimalsDai])\n\n  useEffect(() => {\n    if (myUsdcAllowance.lt(usdcBig)) {\n      setButtonText(\"Approve USDC\")\n      if (!usdcContract) return\n      setCallData([\n        usdcContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDC...\", \"USDC approval failed!\", \"USDC approval made!\"\n      ])\n    } else if (myUsdtAllowance.lt(usdtBig)) {\n      setButtonText(\"Approve USDT\")\n      if (!usdtContract) return\n      setCallData([\n        usdtContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving USDT...\", \"USDT approval failed!\", \"USDT approval made!\"\n      ])\n    } else if (myDaiAllowance.lt(daiBig)) {\n      setButtonText(\"Approve DAI\")\n      if (!daiContract) return\n      setCallData([\n        daiContract.approve,\n        [liquidityMining?.address, BigNumber.from(2).pow(BigNumber.from(256)).sub(BigNumber.from(1))],\n        \"Approving DAI...\", \"DAI approval failed!\", \"DAI approval made!\"\n      ])\n    } else {\n      setButtonText(\"Lock my Stablecoins\")\n      if (!liquidityMining) return\n      setCallData([\n        liquidityMining.stake,\n        [usdcBig, usdtBig, daiBig, { gasLimit: 400000 }],\n        \"Locking coins...\", \"Lock failed!\", \"Lock made!\",\n        () => {\n          setUsdc(0)\n          setUsdt(0)\n          setDai(0)\n        }\n      ])\n    }\n  }, [usdc, usdt, dai, usdcBig, usdtBig, daiBig, myUsdcAllowance, myUsdtAllowance, myDaiAllowance, liquidityMining, usdcContract, usdtContract, daiContract])\n\n  const calls = e => {\n    e.preventDefault()\n    contractCall(...callData)\n  }\n\n  const Input = useCallback(({ currency, value, setValue, balance, decimals, icon }) => {\n    const calculateValue = setValue => {\n      return e => {\n        let normalizedValue = \"\"\n        const inputValue = e.target.value\n        if (inputValue) normalizedValue = Math.min(inputValue, numeral(balance).value())\n        setValue(normalizedValue)\n      }\n    }\n\n    const makeStep = decimals => {\n      return `0.${Array(decimals).fill(0).join('')}`.slice(0, -1) + '1'\n    }\n\n    const inputDisable = !(canStake && numeral(balance).value() > 0)\n\n    return (\n      <div className=\"flex mb-4 text-sm\">\n        <div className=\"mr-4 flex flex-col items-center w-10\">\n          <div className=\"uppercase mb-2\">{currency}</div>\n          <div>\n            <img src={icon} alt=\"icon\" />\n          </div>\n        </div>\n        <div className=\"w-full\">\n          <div className=\"flex justify-between mb-2 text-gray-400\">\n            <div className=\"mr-2\">Amount*</div>\n            <div>Balance: {balance}</div>\n          </div>\n          <input type=\"number\" step={makeStep(decimals)} disabled={inputDisable} required name={currency} id={currency} value={value} onChange={calculateValue(setValue)} min=\"0\" max={balance} className={`w-full border-2 border-gray-500 ${inputDisable ? 'text-gray-400' : 'text-white'} bg-gray-900`} placeholder={balance} />\n        </div>\n      </div>\n    )\n  }, [canStake])\n\n  return (\n    <div>\n      <form onSubmit={calls}>\n        <div className=\"mt-2 flex flex-col w-full\">\n          <Input currency=\"usdc\" value={usdc} setValue={setUsdc} balance={myUsdcBalance} decimals={decimalsUsdc} icon={usdcIcon} />\n          <Input currency=\"usdt\" value={usdt} setValue={setUsdt} balance={myUsdtBalance} decimals={decimalsUsdt} icon={usdtIcon} />\n          <Input currency=\"dai\" value={dai} setValue={setDai} balance={myDaiBalance} decimals={6} icon={daiIcon} />\n        </div>\n        <div className=\"mx-6\">\n          <div className=\"mb-4 text-center text-gray-400 text-2xs\">\n            Helper text here can explain something and have space for a link to <a href=\"/#\" className=\"underline\">learn more</a>\n          </div>\n          <Button type=\"submit\" disabled={!buttonEnabled} icon={lock}>\n            {buttonText}\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default StakeForm\n","import { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { useState, useEffect } from 'react'\nimport { useTransaction } from '../dataContext/transactions'\nimport { useWeb3 } from '../web3'\nimport { Button } from './shared/Button'\n\nconst Claim = () => {\n  const {\n    myRewardsPerTime,\n    myPendingRewards,\n    myClaimedRewards,\n    myTotalRewards,\n  } = useData()\n\n  const { account } = useWeb3()\n  const { liquidityMining, canPayout } = useData()\n\n  const { contractCall, pending } = useTransaction()\n  const [payoutEnabled, setPayoutEnabled] = useState(false)\n\n  useEffect(() => {\n    setPayoutEnabled(!pending && canPayout)\n  }, [pending, canPayout])\n\n  const payout = () => {\n    contractCall(\n      liquidityMining.payout, [account, { gasLimit: 200000 }],\n      \"Paying out rewards...\", \"Payout failed!\", \"Payout successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <div className=\"mb-3\">\n          <Row value={myRewardsPerTime}>SARCO / second</Row>\n        </div>\n        <Row value={myPendingRewards}>SARCO Pending</Row>\n        <Row value={myClaimedRewards}>SARCO Claimed</Row>\n        <Row value={myTotalRewards} total>SARCO Total</Row>\n      </div>\n      <Button disabled={!payoutEnabled} onClick={payout}>\n        Claim my SARCO\n      </Button>\n    </div>\n  )\n}\n\nexport default Claim\n","export default __webpack_public_path__ + \"static/media/unlock.c85dfc87.svg\";","import { useState, useEffect } from 'react'\nimport { useData } from '../dataContext'\nimport { Row } from './shared/Value'\nimport { Button } from './shared/Button'\nimport { useWeb3 } from '../web3'\nimport { useTransaction } from '../dataContext/transactions'\nimport unlock from '../assets/images/unlock.svg'\n\nconst Unlock = () => {\n  const { account } = useWeb3()\n  const {\n    myStakeUsdc,\n    myStakeUsdt,\n    myStakeDai,\n    myStakedStablecoins,\n    liquidityMining,\n    canPayout,\n    canWithdraw,\n  } = useData()\n\n  const { contractCall, pending } = useTransaction()\n\n  const [withdrawEnabled, setWithdrawEnabled] = useState(false)\n\n  useEffect(() => {\n    setWithdrawEnabled(!pending && canWithdraw)\n  }, [pending, canPayout, canWithdraw])\n\n  const withdraw = () => {\n    contractCall(\n      liquidityMining.withdraw, [account, { gasLimit: 300000 }],\n      \"Unlocking stablecoins...\", \"Unlock failed!\", \"Unlock successful!\"\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"mx-4 mb-4\">\n        <Row value={myStakeUsdc}>USDC Locked</Row>\n        <Row value={myStakeUsdt}>USDT Locked</Row>\n        <Row value={myStakeDai}>DAI Locked</Row>\n        <Row value={myStakedStablecoins} total>Total Locked</Row>\n      </div>\n      <Button disabled={!withdrawEnabled} onClick={withdraw} icon={unlock}>\n        Unlock my Stablecoins\n      </Button>\n    </div>\n  )\n}\n\nexport default Unlock\n","import Blocks from './Blocks'\nimport GlobalStats from './GlobalStats'\nimport StakeForm from './StakeForm'\nimport Claim from './Claim'\nimport Unlock from './Unlock'\n\nconst Body = () => {\n  return (\n    <div>\n      <Blocks />\n      <GlobalStats />\n      <div className=\"border-2 border-gray-500 mb-6 py-6 px-4 flex justify-center\">\n        <div className=\"max-w-2xl flex flex-col sm:flex-row sm:items-end\">\n          <div className=\"sm:w-1/2 mb-12 sm:mb-8 sm:mr-2\">\n            <StakeForm />\n          </div>\n          <div className=\"sm:w-1/2 text-sm mb-8\">\n            <div className=\"mx-6\">\n              <div className=\"mb-12\">\n                <Claim />\n              </div>\n              <Unlock />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Body\n","import { useWeb3 } from '../web3'\nimport packageJson from '../../package.json'\n\nconst Footer = () => {\n  const { name } = useWeb3()\n\n  return (\n    <div className=\"text-gray-400 text-xs my-4\">\n      <div className=\"flex justify-between pb-6\">\n        <div>v{packageJson.version + '+' + process.env.REACT_APP_GIT_HASH}</div>\n        <div>{name}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"container min-h-screen flex flex-col justify-between\">\n      <div>\n        <Header />\n        <Body />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ethers } from 'ethers'\nimport { ToastContainer } from 'react-toastify'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport './index.css'\nimport App from './App'\nimport { Web3Provider } from './web3'\nimport { DataProvider } from './dataContext'\nimport reportWebVitals from './reportWebVitals'\n\nconst getLibrary = provider => {\n  return new ethers.providers.Web3Provider(provider)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3Provider>\n        <DataProvider>\n          <App />\n          <ToastContainer closeButton={false} />\n        </DataProvider>\n      </Web3Provider>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}